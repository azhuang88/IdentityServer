@model IdentityServer.Protocols.OpenIdConnect.OidcViewModel
@{
    ViewBag.HideMenu = true;
}

<p>
    Do you want to sign-in to <strong>@Model.ValidatedRequest.Client.Name</strong>?
</p>

@if(Model.GetDisplayScopes().Any())
{
    <p>Select the personal information that you want to release:</p>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <dl class="scopes">
        @foreach (var scope in Model.GetDisplayScopes())
        {
            <dt>
                <label>
                    <input id="scope_@scope" type="checkbox" name="selectedScopes" value="@scope" checked />
                    <strong>@ProgressIQ.IdentityServer.Web.App_LocalResources.OidcAuthorize.Consent.ResourceManager.GetString("Scope_" + scope + "_label")</strong>
                </label>
            </dt>
            <dd>
                <label for="scope_@scope">
                    @ProgressIQ.IdentityServer.Web.App_LocalResources.OidcAuthorize.Consent.ResourceManager.GetString("Scope_" + scope + "_desc")
                </label>
            </dd>
        }
    
        @if(Model.OfflineScope)
        {
            <dt class="offline">
                <label>
                    <input id="scope_offline" type="checkbox" name="selectedScopes" value="@IdentityServer.Protocols.OpenIdConnect.OidcConstants.Scopes.OfflineAccess" checked />
                    <strong>@ProgressIQ.IdentityServer.Web.App_LocalResources.OidcAuthorize.Consent.Scope_offline_label</strong>
                </label>
            </dt>
            <dd>
                <label for="scope_offline">
                    @ProgressIQ.IdentityServer.Web.App_LocalResources.OidcAuthorize.Consent.Scope_offline_desc
                </label>
            </dd>
        }
    </dl>
    
    <p>
        <button name="button" value="allow">Allow</button>
        <button name="button" value="deny">Deny</button>
    </p>
}